AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Applications:
    Type: String
    AllowedValues:
    - Sqoop
    - Hive
Mappings:  
  EMRMappings:
    EMRClusterName:
      Default: emrcluster
    KeyName:
      Default: emrkey
    MasterInstanceType:
      Default: t2.micro
    CoreInstanceType:
      Default: t2.micro
    NumberOfCoreInstances:
      Default: 2
    LogUri:
      Default: s3://emrcluster-logbucket/
    S3DataUri:
      Default: s3://emrcluster-databucket/
    ReleaseLabel:
      Default: emr-5.15.0
Conditions:
  Sqoop:
    Fn::Equals:
    - Ref: Applications
    - Sqoop
  Hive:
    Fn::Equals:
    - Ref: Applications
    - Hive
Resources:
  #EMR-Cluster
  EMRCluster:
    DependsOn:
    - EMRClusterServiceRole
    - EMRClusterinstanceProfileRole
    - EMRClusterinstanceProfile
    - Net1SubnetPublic1
    Type: AWS::EMR::Cluster
    Properties:
      Applications:
      - Name: Ganglia
      - Fn::If:
        - Sqoop
        - Name: Sqoop
        - Ref: AWS::NoValue
      - Fn::If:
        - Hive
        - Name: Hive
        - Ref: AWS::NoValue
      Configurations:
      - Classification: Hive-site
        ConfigurationProperties:
          Hive.rootdir:
            Ref: !FindInMap ['EMRMappings', 'S3DataUri', 'Default']
      - Classification: Hive
        ConfigurationProperties:
          Hive.emr.storageMode: s3
      Instances:
        Ec2KeyName:
          Ref: !FindInMap ['EMRMappings', 'KeyName', 'Default']
        Ec2SubnetId:
          Ref: PublicSubnetId1
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType:
            Ref: !FindInMap ['EMRMappings', 'MasterInstanceType', 'Default']
          Market: ON_DEMAND
          Name: Master
        CoreInstanceGroup:
          InstanceCount:
            Ref: ['EMRMappings', 'NumberOfCoreInstances', 'Default']
          InstanceType:
            Ref:  ['EMRMappings', 'CoreInstanceType', 'Default']
          Market: ON_DEMAND
          Name: Core
        TerminationProtected: false
      VisibleToAllUsers: true
      JobFlowRole:
        Ref: EMRClusterinstanceProfile
      ReleaseLabel:
        Ref: ['EMRMappings', 'ReleaseLabel', 'Default']
      LogUri:
        Ref: ['EMRMappings', 'LogUri', 'Default']
      Name:
        Ref: ['EMRMappings', 'EMRClusterName', 'Default']
      AutoScalingRole: EMR_AutoScaling_DefaultRole
      ServiceRole:
        Ref: EMRClusterServiceRole
  EMRClusterServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - elasticmapreduce.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole
      Path: "/"
  EMRClusterinstanceProfileRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role
      Path: "/"
  EMRClusterinstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: EMRClusterinstanceProfileRole