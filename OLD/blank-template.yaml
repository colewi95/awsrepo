AWSTemplateFormatVersion: 2010-09-09
Parameters:
  EnvironmentName:
    Description: Environment Name
    Type: String
    AllowedValues: [Development, Production]
    ConstraintDescription: Must be Development or Production
Mappings:
#Subnet-Mappings
  SubnetConfig:
    Net1VPC:
      CIDR: 10.0.0.0/16
    Net1SubnetPublic1:
      CIDR: 10.0.0.0/24
    Net1SubnetPublic2:
      CIDR: 10.0.2.0/24
    Net1SubnetPrivate1:
      CIDR: 10.0.1.0/24
    Net1SubnetPrivate2:
      CIDR: 10.0.3.0/24
    Net2VPC:
      CIDR: 172.16.0.0/16
    Net2SubnetPublic1:
      CIDR: 172.16.0.0/24
    Net2SubnetPublic2:
      CIDR: 172.16.2.0/24
    Net2SubnetPrivate1:
      CIDR: 172.16.1.0/24
    Net2SubnetPrivate2:
      CIDR: 172.16.3.0/24
    DestinationCidrBlock:
      CIDR: 0.0.0.0/0
#Resource-Mappings
  ResourceMappings:
    Net1VPC:
      Name: Net1VPC
    Net1InternetGateway:
      Name: Net1InternetGateway
    Net1NatGw1:
      Name: Net1NatGw1
    Net1NatGw2:
      Name: Net1NatGw2
    Net1ElasticIP1:
      Name: Net1ElasticIP1
    Net1ElasticIP2:
      Name: Net1ElasticIP2
    Net1SubnetPublic1:
      Name: Net1SubnetPublic1
    Net1SubnetPublic2:
      Name: Net1SubnetPublic2
    Net1SubnetPrivate1:
      Name: Net1SubnetPrivate1
    Net1SubnetPrivate2:
      Name: Net1SubnetPrivate2
    Net1PrivateRouteTable1:
      Name: Net1PrivateRouteTable1
    Net1PrivateRouteTable2:
      Name: Net1PrivateRouteTable2
    Net1PublicRouteTable1:
      Name: Net1PublicRouteTable1
    Net1PublicRouteTable2:
      Name: Net1PublicRouteTable2
    Net1PrivateRoute1:
      Name: Net1PrivateRoute1
    Net1PrivateRoute2:
      Name: Net1PrivateRoute2
    Net1PublicRoute1:
      Name: Net1PublicRoute1
    Net1PublicRoute2:
      Name: Net1PublicRoute2
    Net1PrivateRouteTableAssoc1:
      Name: Net1PrivateRouteTableAssoc1
    Net1PrivateRouteTableAssoc2:
      Name: Net1PrivateRouteTableAssoc2
    Net1PublicRouteTableAssoc1:
      Name: Net1PublicRouteTableAssoc1
    Net1PublicRouteTableAssoc2:
      Name: Net1PublicRouteTableAssoc2
    Net2VPC:
      Name: Net2VPC
    Net2InternetGateway:
      Name: Net2InternetGateway
    Net2NatGw1:
      Name: Net2NatGw1
    Net2NatGw2:
      Name: Net2NatGw2
    Net2ElasticIP1:
      Name: Net2ElasticIP1
    Net2ElasticIP2:
      Name: Net2ElasticIP2
    Net2SubnetPublic1:
      Name: Net2SubnetPublic1
    Net2SubnetPublic2:
      Name: Net2SubnetPublic2
    Net2SubnetPrivate1:
      Name: Net2SubnetPrivate1
    Net2SubnetPrivate2:
      Name: Net2SubnetPrivate2
    Net2PrivateRouteTable1:
      Name: Net2PrivateRouteTable1
    Net2PrivateRouteTable2:
      Name: Net2PrivateRouteTable2
    Net2PublicRouteTable1:
      Name: Net2PublicRouteTable1
    Net2PublicRouteTable2:
      Name: Net2PublicRouteTable2
    Net2PrivateRoute1:
      Name: Net2PrivateRoute1
    Net2PrivateRoute2:
      Name: Net2PrivateRoute2
    Net2PublicRoute1:
      Name: Net2PublicRoute1
    Net2PublicRoute2:
      Name: Net2PublicRoute2
    Net2PrivateRouteTableAssoc1:
      Name: Net2PrivateRouteTableAssoc1
    Net2PrivateRouteTableAssoc2:
      Name: Net2PrivateRouteTableAssoc2
    Net2PublicRouteTableAssoc1:
      Name: Net2PublicRouteTableAssoc1
    Net2PublicRouteTableAssoc2:
      Name: Net2PublicRouteTableAssoc2
#RegionMapping      
  RegionMap:
    us-east-1:
      AMZLINUX: ami-062f7200baf2fa504
    us-east-2:
      AMZLINUX: ami-02ccb28830b645a41
    us-west-1:
      AMZLINUX: ami-03caa3f860895f82e
    us-west-2:
      AMZLINUX: ami-04590e7389a6e577c
    sa-east-1:
      AMZLINUX: ami-09de7b4017733e2af
    ca-central-1:
      AMZLINUX: ami-0a269ca7cc3e3beff
    eu-west-1:
      AMZLINUX: ami-0713f98de93617bb4
    eu-west-2:
      AMZLINUX: ami-0089b31e09ac3fffc
    eu-west-3:
      AMZLINUX: ami-007fae589fdf6e955
    eu-central-1:
      AMZLINUX: ami-07cda0db070313c52
    eu-north-1:
      AMZLINUX: ami-0662eb9b9b8685935
  EnvironmentToInstanceType:
    Development:
      InstanceType: t2.micro
    Production:
      InstanceType: t2.small
  KeyPairMapping:
    Development:
      KeyPair: HIIDEV
    Production:
      KeyPair: HIIPRD
  SecurityGroupMapping:
    WebServers:
      SecurityGroup: WebSG
  InstanceMappings:
    WebServers:
      PublicWebServer1: Net1PubWebServer1
Resources:
#SecurityGroups
# Net1VPC 10.0.0.0/16  
  Net1VPC: 
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !FindInMap ['SubnetConfig', 'Net1VPC', 'CIDR']
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      MapPublicIpOnLaunch: 'true'
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1VPC', 'Name']
  Net1InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1InternetGateway', 'Name']
  Net1VPCAttachGW:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref Net1InternetGateway
      VpcId: !Ref Net1VPC 
  Net1NatGw1:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt Net1ElasticIP1.AllocationId
      SubnetId: !Ref Net1SubnetPublic1
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1NatGw1', 'Name']
  Net1NatGw2:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt Net1ElasticIP2.AllocationId
      SubnetId: !Ref Net1SubnetPublic2
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1NatGw2', 'Name']
#Net1ElasticIPs
  Net1ElasticIP1:
    DependsOn: Net1VPCAttachGW
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1ElasticIP1', 'Name']
  Net1ElasticIP2:
    DependsOn: Net1VPCAttachGW
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1ElasticIP2', 'Name']
#Net1Subnets      
  Net1SubnetPublic1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      VpcId: !Ref Net1VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net1SubnetPublic1', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1SubnetPublic1', 'Name']
#Example of Naming - vpc-0d77c7bd70b1f6d0a-public-a
  Net1SubnetPublic2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      VpcId: !Ref Net1VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net1SubnetPublic2', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1SubnetPublic2', 'Name']
  Net1SubnetPrivate1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      VpcId: !Ref Net1VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net1SubnetPrivate1', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1SubnetPrivate1', 'Name']
  Net1SubnetPrivate2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      VpcId: !Ref Net1VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net1SubnetPrivate2', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1SubnetPrivate2', 'Name']
#Net1PrivateRoutes
  Net1PrivateRouteTable1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net1VPC 
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1PrivateRouteTable1', 'Name']
  Net1PrivateRoute1:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      NatGatewayId: !Ref Net1NatGw1
      RouteTableId: !Ref Net1PrivateRouteTable1
  Net1PrivateRouteTableAssoc1:
    DependsOn: Net1SubnetPrivate1
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net1PrivateRouteTable1
      SubnetId: !Ref Net1SubnetPrivate1   
  Net1PrivateRouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net1VPC 
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1PrivateRouteTable2', 'Name']
  Net1PrivateRoute2:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      NatGatewayId: !Ref Net1NatGw2
      RouteTableId: !Ref Net1PrivateRouteTable2
  Net1PrivateRouteTableAssoc2:
    DependsOn: Net1SubnetPrivate2
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net1PrivateRouteTable2
      SubnetId: !Ref Net1SubnetPrivate2
#Net1PublicRoutes
  Net1PublicRouteTable1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net1VPC 
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1PublicRouteTable1', 'Name']
  Net1PublicRoute1:
    Type: "AWS::EC2::Route"
    DependsOn: Net1VPCAttachGW
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      GatewayId: !Ref Net1InternetGateway
      RouteTableId: !Ref Net1PublicRouteTable1
  Net1PublicRouteTableAssoc1:
    DependsOn: Net1SubnetPublic1
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net1PublicRouteTable1
      SubnetId: !Ref Net1SubnetPublic1  
  Net1PublicRouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net1VPC
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net1PublicRouteTable2', 'Name']
  Net1PublicRoute2:
    Type: "AWS::EC2::Route"
    DependsOn: Net1VPCAttachGW
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      GatewayId: !Ref Net1InternetGateway
      RouteTableId: !Ref Net1PublicRouteTable2
  Net1PublicRouteTableAssoc2:
    DependsOn: Net1SubnetPublic2
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net1PublicRouteTable2
      SubnetId: !Ref Net1SubnetPublic2
#Instances
  Net1PubWebServer1:
    DependsOn: Net1VPCAttachGW
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMZLINUX]
      InstanceType: !FindInMap [EnvironmentToInstanceType, !Ref 'EnvironmentName', InstanceType]
      KeyName: !FindInMap [KeyPairMapping, !Ref 'EnvironmentName', KeyPair] 
      SecurityGroupIds: !Ref WebSG
      SubnetId: !Ref Net1SubnetPublic1
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['InstanceMappings', 'WebServers', 'PublicWebServer1']
      UserData:
        Fn::Base64:
          Fn::Join:
          - "\n"
          - - "#!/bin/bash -ex"
            - yum install -y httpd
            - cd /var/www/html
            - echo '<html><body>Welcome to Net1PubWebServer1</body></html>' > index.html
            - service httpd start

#Net2VPC 10.0.0.0/16  
  Net2VPC: 
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !FindInMap ['SubnetConfig', 'Net2VPC', 'CIDR']
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      MapPublicIpOnLaunch: 'true'
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2VPC', 'Name']
  Net2InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2InternetGateway', 'Name']
  Net2VPCAttachGW:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref Net2InternetGateway
      VpcId: !Ref Net2VPC 
  Net2NatGw1:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt Net2ElasticIP1.AllocationId
      SubnetId: !Ref Net2SubnetPublic1
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2NatGw1', 'Name']
  Net2NatGw2:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt Net2ElasticIP2.AllocationId
      SubnetId: !Ref Net2SubnetPublic2
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2NatGw2', 'Name']
#Net2ElasticIPs
  Net2ElasticIP1:
    DependsOn: Net2VPCAttachGW
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2ElasticIP1', 'Name']
  Net2ElasticIP2:
    DependsOn: Net2VPCAttachGW
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2ElasticIP2', 'Name']
#Net2Subnets      
  Net2SubnetPublic1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      VpcId: !Ref Net2VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net2SubnetPublic1', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2SubnetPublic1', 'Name']
#Example of Naming - vpc-0d77c7bd70b1f6d0a-public-a
  Net2SubnetPublic2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      VpcId: !Ref Net2VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net2SubnetPublic2', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2SubnetPublic2', 'Name']
  Net2SubnetPrivate1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      VpcId: !Ref Net2VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net2SubnetPrivate1', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2SubnetPrivate1', 'Name']
  Net2SubnetPrivate2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      VpcId: !Ref Net2VPC 
      CidrBlock: !FindInMap ['SubnetConfig', 'Net2SubnetPrivate2', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2SubnetPrivate2', 'Name']
  #Net2PrivateRoutes
  Net2PrivateRouteTable1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net2VPC 
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2PrivateRouteTable1', 'Name']
  Net2PrivateRoute1:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      NatGatewayId: !Ref Net2NatGw1
      RouteTableId: !Ref Net2PrivateRouteTable1
  Net2PrivateRouteTableAssoc1:
    DependsOn: Net2SubnetPrivate1
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net2PrivateRouteTable1
      SubnetId: !Ref Net2SubnetPrivate1   
  Net2PrivateRouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net2VPC 
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2PrivateRouteTable2', 'Name']
  Net2PrivateRoute2:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      NatGatewayId: !Ref Net2NatGw2
      RouteTableId: !Ref Net2PrivateRouteTable2
  Net2PrivateRouteTableAssoc2:
    DependsOn: Net2SubnetPrivate2
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net2PrivateRouteTable2
      SubnetId: !Ref Net2SubnetPrivate2
  #Net2PublicRoutes
  Net2PublicRouteTable1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net2VPC 
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2PublicRouteTable1', 'Name']
  Net2PublicRoute1:
    Type: "AWS::EC2::Route"
    DependsOn: Net2VPCAttachGW
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      GatewayId: !Ref Net2InternetGateway
      RouteTableId: !Ref Net2PublicRouteTable1
  Net2PublicRouteTableAssoc1:
    DependsOn: Net2SubnetPublic1
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net2PublicRouteTable1
      SubnetId: !Ref Net2SubnetPublic1  
  Net2PublicRouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Net2VPC
      Tags:
        -
          Key: "Name"
          Value: !FindInMap ['ResourceMappings', 'Net2PublicRouteTable2', 'Name']
  Net2PublicRoute2:
    Type: "AWS::EC2::Route"
    DependsOn: Net2VPCAttachGW
    Properties:
      DestinationCidrBlock: !FindInMap ['SubnetConfig', 'DestinationCidrBlock', 'CIDR']
      GatewayId: !Ref Net2InternetGateway
      RouteTableId: !Ref Net2PublicRouteTable2
  Net2PublicRouteTableAssoc2:
    DependsOn: Net2SubnetPublic2
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref Net2PublicRouteTable2
      SubnetId: !Ref Net2SubnetPublic2
#VPCpeering
  VPCpeer:
    Type: "AWS::EC2::VPCPeeringConnection"
    Properties:
      PeerVpcId: !Ref Net2VPC
      VpcId: !Ref Net1VPC
#Outputs      
Outputs:
  WebServerURL:
    Description: URL to Simple Web Server
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - Net1PubWebServer1
          - PublicIp
